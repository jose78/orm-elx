/*Copyright 2012 ELX  Licensed under the Apache License, Version 2.0 (the "License");  you may not use this file except in compliance with the License.  You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License. */package org.elx.orm.entity.annt;import java.util.List;import org.elx.orm.annotations.Column;import org.elx.orm.annotations.Connection;import org.elx.orm.annotations.Id;import org.elx.orm.annotations.Reference;import org.elx.orm.annotations.Table;import org.elx.orm.annotations.Tables;import org.elx.orm.utils.Entity;import org.elx.validation.annotations.Validation;@Tables(lstTables = {		// @Table(name = "Address", schema = "schema_postgre", connection =		// @Connection(nameConnection = "postgre_CNX")),		// @Table(name = "Company", schema = "ADM", connection =		// @Connection(nameConnection = "oracle_CNX")),		@Table(name = "Company", schema = "schema_elx_derby", connection = @Connection(nameConnection = "derby_CNX")),		@Table(name = "Company", connection = @Connection(nameConnection = "MySQL_CNX")) })public class TblCompany implements Entity {	@Id(nameConnection = "MySQL_CNX")	@Column(name = "comp_id_company")	private Long idCompany;	@Column(name = "comp_id_address")	private Long idAddress;	@Column(name = "comp_name_company")	private String name;	@Validation(contains = "DATO", toTrim = true, toUppercase = true)	@Column(name = "comp_sector_Company")	private String sector;	@Reference(classResponse = TblAddress.class, fromColumnName = "add_id_address", fromTableName = "Address", isOneToOne = true, nameReference = "REF_COMP_ADD", toColumnName = "comp_id_address")	private TblAddress address = null;	@Reference(classResponse = TblEmployee.class, fromColumnName = "emp_id_company", fromTableName = "Employee", isOneToOne = false, nameReference = "REF_COMP_EMP", toColumnName = "comp_id_company")	private List<TblEmployee> lstEmployees = null;	public TblCompany() {	}	/**	 * @return the idCompany	 */	public Long getIdCompany() {		return this.idCompany;	}	/**	 * @return the name	 */	public String getName() {		return this.name;	}	/**	 * @return the sector	 */	public String getSector() {		return this.sector;	}	/**	 * @param idCompany	 *            the idCompany to set	 */	public void setIdCompany(Long idCompany) {		this.idCompany = idCompany;	}	/**	 * @param name	 *            the name to set	 */	public void setName(String name) {		this.name = name;	}	/**	 * @param sector	 *            the sector to set	 */	public void setSector(String sector) {		this.sector = sector;	}	/**	 * @return the idAddress	 */	public Long getIdAddress() {		return idAddress;	}	/**	 * @param idAddress	 *            the idAddress to set	 */	public void setIdAddress(Long idAddress) {		this.idAddress = idAddress;	}	/*	 * (non-Javadoc)	 * 	 * @see net.java.elx.utils.Entity#getIdEntity()	 */	public String getIdEntity() {		return String.valueOf(getIdCompany());	}	@Override	public String toString() {		StringBuilder sbEmp = new StringBuilder();		if (lstEmployees != null) {			for (TblEmployee employee : lstEmployees) {				sbEmp.append("\n         ").append(employee);			}		}		return "\nCompany ["				+ (idCompany != null ? "idCompany=" + idCompany + ", " : "")				+ (idAddress != null ? "idAddress=" + idAddress + ", " : "")				+ (name != null ? "name=" + name + ", " : "")				+ (sector != null ? "sector=" + sector + ", " : "")				+ (address != null ? "address=" + address + ", " : "")				+ ("lstEmployees=" + sbEmp.toString() + "]");	}}