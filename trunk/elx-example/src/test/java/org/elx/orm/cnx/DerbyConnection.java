/*Copyright 2012 ELX  Licensed under the Apache License, Version 2.0 (the "License");  you may not use this file except in compliance with the License.  You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License. */package org.elx.orm.cnx;import java.sql.Connection;import java.sql.DriverManager;import java.sql.SQLException;import org.apache.log4j.Logger;import org.elx.orm.annotations.ConnectionDef;import org.elx.orm.db.AbstractConncection;@ConnectionDef(nameConnection = "derby_CNX", read = true, write = true)public class DerbyConnection extends AbstractConncection {	private static Logger log = Logger.getLogger(DerbyConnection.class);	private String strUrl;	private String strDriverName;	private String strUsr;	private String strPass;	private boolean flagAutoCommit;	public DerbyConnection() {		super();	}	@Override	protected void init() {		flagAutoCommit = false;		strUsr = "root";		strPass = "adm";		strUrl = "jdbc:derby://localhost:1527/elxTest;create=true;user="				+ strUsr + ";password=" + strPass;		strDriverName = "org.apache.derby.jdbc.ClientDriver";		try {			Class.forName(strDriverName).newInstance();		} catch (final Exception e) {			log.error("ERROR Load Driver:" + strDriverName + ".", e);		}		log.debug("Load Driver:" + strDriverName + " OK.");	}	@Override	protected Connection get() {		try {			cnx = DriverManager.getConnection(strUrl, strUsr, strPass);			cnx.setAutoCommit(flagAutoCommit);			log.info("Connection " + getName() + " create OK.");			log.info(this);		} catch (SQLException e) {			log.error(e.getMessage(), e);			e.printStackTrace();		}		return cnx;	}	@Override	public String toString() {		return "DerbyConnection [Name=" + getName() + ",  strUrl=" + strUrl				+ ", strDriverName=" + strDriverName + ", strUsr=" + strUsr				+ ", strPass=" + strPass + ", flagAutoCommit=" + flagAutoCommit				+ "]";	}}